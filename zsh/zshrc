HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory beep notify
bindkey -e

autoload -Uz compinit
compinit
# End of lines added by compinstall

zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)(?)*==34=00}:${(s.:.)LS_COLORS}")';


# http://www.dribin.org/dave/blog/archives/2004/01/25/zsh_win_resize/
# Set prompt to minimal if in small window
set_prompt()
{
    if [ $COLUMNS -gt 60 ]; then
	PROMPT="%{%F{blue}%}%n@%m%{%F{white}%}%c%{%F{blue}%}%#%{%f%}"
        RPROMPT='%{%F{white}%}%D{%H%M}'
    else
	PROMPT="%{%F{blue}%}$%{%f%}"
    	RPROMPT=''
    fi
}
set_prompt

# Reset on window resize
TRAPWINCH ()
{ set_prompt }

# TTY colors
# http://github.com/joepvd/tty-solarized
if [ "$TERM" = "linux" ]; then
    echo -en "\e]PB657b83" # S_base00
    echo -en "\e]PA586e75" # S_base01
    echo -en "\e]P0073642" # S_base02
    echo -en "\e]P62aa198" # S_cyan
    echo -en "\e]P8002b36" # S_base03
    echo -en "\e]P2859900" # S_green
    echo -en "\e]P5d33682" # S_magenta
    echo -en "\e]P1dc322f" # S_red
    echo -en "\e]PC839496" # S_base0
    echo -en "\e]PE93a1a1" # S_base1
    echo -en "\e]P9cb4b16" # S_orange
    echo -en "\e]P7eee8d5" # S_base2
    echo -en "\e]P4268bd2" # S_blue
    echo -en "\e]P3b58900" # S_yellow
    echo -en "\e]PFfdf6e3" # S_base3
    echo -en "\e]PD6c71c4" # S_violet
    clear # against bg artifacts
fi

#if ZKBD file exists, fix key bindings
#to generate: "autoload zkbd; zkbd
#http://stackoverflow.com/questions/8638012/fix-key-settings-home-end-insert-delete-in-zshrc-when-running-zsh-in-terminat

ZKBD=~/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE}
if [ -f $ZKBD ]; then
    source $ZKBD
    [[ -n ${key[Backspace]} ]] && bindkey "${key[Backspace]}" backward-delete-char
    [[ -n ${key[Insert]} ]] && bindkey "${key[Insert]}" overwrite-mode
    [[ -n ${key[Home]} ]] && bindkey "${key[Home]}" beginning-of-line
    [[ -n ${key[PageUp]} ]] && bindkey "${key[PageUp]}" up-line-or-history
    [[ -n ${key[Delete]} ]] && bindkey "${key[Delete]}" delete-char
    [[ -n ${key[End]} ]] && bindkey "${key[End]}" end-of-line
    [[ -n ${key[PageDown]} ]] && bindkey "${key[PageDown]}" down-line-or-history
    [[ -n ${key[Up]} ]] && bindkey "${key[Up]}" up-line-or-search
    [[ -n ${key[Left]} ]] && bindkey "${key[Left]}" backward-char
    [[ -n ${key[Down]} ]] && bindkey "${key[Down]}" down-line-or-search
    [[ -n ${key[Right]} ]] && bindkey "${key[Right]}" forward-char
else
    echo "No ZKBD file. Keybindings might be weird. Run 'autoload zkbd; zkbd' to generate."
fi

bindkey $ beginning-of-line
bindkey ^ end-of-line

setopt CORRECT

alias ls="ls -CF --color=auto"
alias su="su -p"

# http://stackoverflow.com/questions/16956810/finding-all-files-containing-a-text-string-on-linux
findword () {
  grep -rnw "$1" -e "$2"
}

# http://www.unix.com/solaris/54552-what-command-can-display-files-tree.html
alias tree="find . -maxdepth 2 -not -path '*/\.*' -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"

alias ultron="chromium"
export PATH=$HOME/dotfiles/arch:$PATH


#syntax highlight plugin
source ~/.zshplugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main)

search() {
    grep -nr $1 $2
}

#xfce terminal title to working directory
case $TERM in
  xterm*)
    precmd () {print -Pn "\e]0;%~\a"}
    ;;
esac


#hopefully there aren't any major local edits, but if there are...
LOCALS=~/dotfiles/zsh/localrc
if [ -f $LOCALS ]; then
    source $LOCALS
fi
